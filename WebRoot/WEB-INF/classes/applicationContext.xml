<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	<!-- 扫描包中注解标注的类 -->
	<context:component-scan base-package="cn.crm" />
	
	<!-- 数据源配置信息 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 指定连接数据库的驱动-->  
        <property name="driverClass" value="${jdbc.driverClassName}"/>  
        <!-- 指定连接数据库的URL-->  
        <property name="jdbcUrl" value="${jdbc.url}"/>  
        <!-- 指定连接数据库的用户名-->  
        <property name="user" value="${jdbc.username}"/>  
        <!-- 指定连接数据库的密码-->  
        <property name="password" value="${jdbc.password}"/>  
        <!-- 指定连接池中保留的最大连接数. Default:15-->  
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>  
        <!-- 指定连接池中保留的最小连接数-->  
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>  
        <!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->  
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>  
        <!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->  
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>  
        <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->  
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>  
        <!-- JDBC的标准,用以控制数据源内加载的PreparedStatements数量。  
        但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0-->  
        <property name="maxStatements" value="${jdbc.maxStatements}"/>  
        <!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->  
        <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>  
	</bean>
	<!-- 创建SessionFactory对象 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
			    <!-- 方言 -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.Oracle10gDialect
				</prop>
				<!-- 是否显示SQL语句 -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 是否格式化SQL语句 -->
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>cn/crm/entity/BasDict.hbm.xml</value>
				<value>cn/crm/entity/CstActivity.hbm.xml</value>
				<value>cn/crm/entity/CstCustomer.hbm.xml</value>
				<value>cn/crm/entity/CstLinkman.hbm.xml</value>
				<value>cn/crm/entity/CstLost.hbm.xml</value>
				<value>cn/crm/entity/CstPlan.hbm.xml</value>
				<value>cn/crm/entity/CstService.hbm.xml</value>
				<value>cn/crm/entity/Log.hbm.xml</value>
				<value>cn/crm/entity/Message.hbm.xml</value>
				<value>cn/crm/entity/Notice.hbm.xml</value>
				<value>cn/crm/entity/Orders.hbm.xml</value>
				<value>cn/crm/entity/OrdersLine.hbm.xml</value>
				<value>cn/crm/entity/Product.hbm.xml</value>
				<value>cn/crm/entity/SalChance.hbm.xml</value>
				<value>cn/crm/entity/Schedule.hbm.xml</value>
				<value>cn/crm/entity/Storage.hbm.xml</value>
				<value>cn/crm/entity/SysRight.hbm.xml</value>
				<value>cn/crm/entity/SysRole.hbm.xml</value>
				<value>cn/crm/entity/SysRoleRight.hbm.xml</value>
				<value>cn/crm/entity/SysUser.hbm.xml</value>	
			</list>
		</property>
	</bean>
	<!-- 通用的数据访问层 -->
	<bean id="dao" class="cn.crm.common.basedao.DaoHelp">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>	
</beans>